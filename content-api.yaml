---
openapi: 3.0.1
info:
  title: Content API
  description: Content API for KIQR Headless CMS
  version: 0.5.1
paths:
  "/{content_type_slug}/":
    get:
      summary: Returns documents by content type
      tags:
      - Documents
      operationId: getDocuments
      security:
      - environmentId: []
      parameters:
      - name: content_type_slug
        in: path
        example: posts
        required: true
        schema:
          type: string
      responses:
        '401':
          description: Query parameter environment_id is missing or invalid
        '200':
          description: Returns a list of documents
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DocumentsCollection"
  "/{content_type_slug}/{document_slug}":
    get:
      summary: Returns a document
      tags:
      - Documents
      operationId: getDocument
      security:
      - environmentId: []
      parameters:
      - name: content_type_slug
        in: path
        example: posts
        required: true
        schema:
          type: string
      - name: document_slug
        in: path
        example: doc_LMxzy1KnBRQKxFyZ0aGNdqp5
        required: true
        schema:
          type: string
      responses:
        '401':
          description: Query parameter environment_id is missing or invalid
        '200':
          description: Returns a document
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Document"
servers:
- url: https://content.kiqr.cloud/v1
components:
  securitySchemes:
    environmentId:
      type: apiKey
      name: environment_id
      in: query
  schemas:
    Document:
      type: object
      required:
      - id
      - name
      - slug
      - content
      - updated_at
      - created_at
      additionalProperties: false
      properties:
        id:
          type: string
          example: doc_LMxzy1KnBRQKxFyZ0aGNdqp5
        name:
          type: string
          example: My first post
        slug:
          type: string
          example: my-first-post
        content:
          type: object
          additionalProperties:
            type: string
        relations:
          type: object
          additionalProperties:
            type: object
        updated_at:
          type: string
          format: date-time
          example: 023-02-13T18:57:03Z
        created_at:
          type: string
          format: date-time
          example: '2023-01-17T09:36:08Z'
    DocumentsCollection:
      type: object
      required:
      - documents
      - meta
      properties:
        documents:
          type: array
          items:
            "$ref": "#/components/schemas/Document"
        meta:
          type: object
          required:
          - pagination
          properties:
            pagination:
              "$ref": "#/components/schemas/PaginationMeta"
    PaginationMeta:
      type: object
      required:
      - count
      - page
      - items
      - pages
      additionalProperties: false
      properties:
        count:
          type: number
          example: 26
        page:
          type: number
          example: 1
        items:
          type: number
          example: 20
        pages:
          type: number
          example: 2
        from:
          type: number
          example: 21
        to:
          type: number
          example: 26
    EmptyResponse:
      type: object
      nullable: true
