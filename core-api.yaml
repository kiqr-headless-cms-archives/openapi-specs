---
openapi: 3.0.1
info:
  title: Core API
  description: Core API for KIQR Headless CMS
  version: 0.7.0
paths:
  "/schemas":
    get:
      summary: Retrieve a projects history of schemas
      tags:
      - Schemas
      operationId: getSchemas
      security:
      - BearerAuth: []
      parameters:
      - name: projectId
        in: header
        schema:
          type: string
      responses:
        '401':
          description: Missing or invalid token
        '200':
          description: retrieve a list of schemas
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Schema"
    post:
      summary: Create a schema
      tags:
      - Schemas
      operationId: createSchema
      security:
      - BearerAuth: []
      parameters:
      - name: projectId
        in: header
        schema:
          type: string
      responses:
        '401':
          description: Missing or invalid token
        '201':
          description: with empty content types
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Schema"
        '422':
          description: with nested invalid field
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                commitMessage:
                  type: string
                contentTypesRaw:
                  type: object
              required:
              - commitMessage
              - contentTypes
  "/schemas/{schemaId}":
    get:
      summary: Retrieve details about schema
      tags:
      - Schemas
      operationId: getSchema
      security:
      - BearerAuth: []
      parameters:
      - name: projectId
        in: header
        schema:
          type: string
      - name: schemaId
        in: path
        required: true
        schema:
          type: string
      responses:
        '401':
          description: Missing or invalid token
        '200':
          description: retrieve a schema
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Schema"
  "/users/me":
    get:
      summary: Retrieve info about the current user
      tags:
      - User
      operationId: getUserinfo
      security:
      - BearerAuth: []
      responses:
        '401':
          description: Missing or invalid token
        '200':
          description: Returns user information
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
servers:
- url: https://api.kiqr.cloud/v1
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      additionalProperties: false
      required:
      - id
      - name
      - updatedAt
      - createdAt
      properties:
        id:
          type: string
          example: user_zWNY2gOL1xwrYuRqXQnjJZyP
        name:
          type: string
          example: David Specimen
        updatedAt:
          type: string
          format: date-time
          example: '2023-01-17T09:36:08Z'
        createdAt:
          type: string
          format: date-time
          example: '2023-01-17T09:36:08Z'
    Environment:
      type: object
      additionalProperties: false
      required:
      - id
      - name
      - environmentType
      - updatedAt
      - createdAt
      properties:
        id:
          type: string
          example: env_RKGOXN3jqMznkC0MDBz1yLr2
        name:
          type: string
          example: development
        environmentType:
          type: string
          example: development
        updatedAt:
          type: string
          format: date-time
          example: '2023-01-17T09:36:08Z'
        createdAt:
          type: string
          format: date-time
          example: '2023-01-17T09:36:08Z'
    Project:
      type: object
      additionalProperties: false
      required:
      - id
      - name
      - updatedAt
      - createdAt
      properties:
        id:
          type: string
          example: my-project-name
        name:
          type: string
          example: My project name
        updatedAt:
          type: string
          format: date-time
          example: '2023-01-17T09:36:08Z'
        createdAt:
          type: string
          format: date-time
          example: '2023-01-17T09:36:08Z'
    Schema:
      type: object
      additionalProperties: false
      required:
      - id
      - commitMessage
      - updatedAt
      - createdAt
      properties:
        id:
          type: string
          example: schema_RKGOXN3jqMznkC0MDBz1yLr2
        commitMessage:
          type: string
          example: 'chore: my first commit'
        contentTypes:
          type: array
          items:
            "$ref": "#/definitions/content_type"
        updatedAt:
          type: string
          format: date-time
          example: '2023-01-17T09:36:08Z'
        createdAt:
          type: string
          format: date-time
          example: '2023-01-17T09:36:08Z'
      definitions:
        content_type:
          type: object
          additionalProperties: false
          required:
          - name
          properties:
            name:
              type: string
            fields:
              type: object
              additionalProperties:
                "$ref": "#/definitions/field"
        field:
          type: object
          additionalProperties: false
          properties:
            description:
              type: string
            label:
              type: string
            type:
              type: string
              enum:
              - string
              - text
              - editor
            content_type:
              type: string
